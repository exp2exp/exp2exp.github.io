#+TITLE: 14 May 2022 ‚Äî Emacs Research Group
#+Author: Noorah Alhasan, Joe Corneli, Leo Vivier, Abby Tabor
#+roam_tag: HI
#+FIRN_UNDER: erg
# Uncomment these lines and adjust the date to match
#+FIRN_LAYOUT: erg-update
#+DATE_CREATED: <2022-05-14 Sat>

* 14 May 2022  ‚Äî Emacs Research Group


* Check-ins
:PROPERTIES:
:Effort:   0:15
:END:

** NA
- Had a long week working
- Birthday soon!
  - Congratulations!
- Taurus: liking the good things

** JC
- Just came from the pub
- Saturday market: Algerian food is good there
- Voting for next ERG in person in Paris, maybe!

** LV
- Air conditioning? No! Fan.  Take me back to the pool soon.
- Cathedrals & Bazaar is on point for Joe‚Äôs Saturday, perhaps.  By ESR.

** AT

¬∞ (Will be traveling with Joe, on Tuesday on the same Eurostar to France!)
- Come from the allotment, and the potatoes are in!


* Meta points

** DONE Don't forget to record the session!                             :LV:

** Could allow some homework in session for those who didn‚Äôt manage to bring five

* TODO Pre-PAR ‚Äî Review the intention: what do we expect to learn or make together?

- Cover patterns
- Discuss what each of us came with, discuss similarities & differences
- Broadly get on the same page, could benefit from a 5m lightning version of the Paris talk + comments

* Agenda (Part 1)
:PROPERTIES:
:Effort:   0:20
:END:

** PLACARD Patterns
*** JC
**** *PLACARD*
- A method for distributed problem solving
**** *HEARTBEAT*
(from the Peeragogy Project; people gravitate to regular meetings)
**** *WRAPPER*
(from the Peeragogy Project; bringing things into context; changing the tone of the meeting)
**** üÉè
**** üÉè
*** LV
Cf. "Apprenticeship patterns: Guidance for the Aspiring Software Craftsman".  This is a hybrid of what I thought was useful for ERG, and what‚Äôs powerful for me in my self-directed study.

**** *Leverage different rhythms.*
(We have "Session" is the weekly unit of time; within that, we have "PAR" which is the highest rhythm, "CLA" as a form of condensing or essentialising 4-6 sessions; this allows us to connect to deeper rhythms. EmacsConf as the bracket for a "season".  It‚Äôs important when you have a bunch of people who don‚Äôt know each other, who may also be thinking about the problems right in front of them but not necessarily seeking deeper rhythms.  When we say it‚Äôs Meta we mean it‚Äôs a different rhythm that trickles down.)
   - Potentially related to JC‚Äôs HEARTBEAT + WRAPPER; you need a receiver/recipient for those /pulses/ (problematizes that)
   - (And see Abby‚Äôs link to the body‚Äôs rhythms below.)
**** *Empty your cup*
   - When we go to work with people we will bring our expertise, but if everyone did this, the table would be too full and we wouldn‚Äôt be able to see a way forward easily.   So, how can we come to the meeting with fresh eyes, bringing your expertise but not necessarily making it the forefront; can you mark your intention to not let the expertise be too much of a blinder.  Otherwise, transdisciplinarity can‚Äôt flow.  It‚Äôs not just people in different fields talking with each other: it‚Äôs mostly about having fresh eyes, and being open to the porosity between different fields.
   - This is materialized by:
     - /Expose your ignorance/ ‚Äî What you do in a social group.  Ask a question when you don‚Äôt understand something.  "There‚Äôs no stupid question." ‚Äî Though there‚Äôs still a strong pressure to not produce friction; but even so it‚Äôs the first step towards becoming a transdisciplinarist.  DK effect won‚Äôt take you anywhere.
     - /Confront your ignorance/ ‚Äî Mobilising courage to tackle the stuff that you don‚Äôt understand.  Universities encourage us to specialise.  Universities tend to reward specialism & expertise.  But what do you do once you‚Äôre an expert at something?  E.g. Emacs ‚Üí Python involved leaving a fancy island where everything functioned well.
     - /Know when to do which/
   - JC: Empty your cup reminded me of CA‚Äôs 15 master-patterns (features of life, maybe?): [[https://patterns.architexturez.net/doc/az-cf-172521]["The void can be identified with plain structure at the largest scale of a fractal."]]
**** *Observe, Design, Strategize.*
  - JC this reminds me of PLACARD.
**** *Embrace protocols*
  - How I manage to motivate myself to work on a daily basis.  It‚Äôs been a month almost to the month since I restarted working on Python daily; now that it‚Äôs been a month, I can say the habit has been enshrined.  Or, similar, ERG, meeting on a weekly basis.  This still takes enshrinement, we have plenty of things to do; timezones to work around.  Be they finding the time to meet, or sticking to things like PAR or CLA, it mobilises things that are useful.  It‚Äôs not just manifesting rigor for the sake of it.
  - For us: we can provide protocols to people who work in e.g. architecture that can allow everyone to follow a set of guidelines/workflow that maximises plurality, e.g., 4 people with different skills, can all have the chance to contribute based on a workflow that values their contribution.  So: be rigorous in how we design the workshop, how we define patterns/methods/etc., so that it can be used as a proper fundamental base to develop the solution.

(These, ‚ë°,‚ë¢,‚ë£ go towards rigor, from a programming standpoint.)

*** NA
Coming from a policy & planning perspective; thought strictly on the method itself.  These are all things that the participants need to get on the same page about.

**** *Context*
Everyone needs to get on the same page as to ‚Äòcontext‚Äô (LV mentioned also)
**** *Values*
The participants need to get on the same page
**** *Vision*
of whatever we‚Äôre anticipating
**** *Capacity*
How capable are we to tackle our problems and come up with solutions
**** *Constraints*
whether real or perceived
**** *Unknowns*
(LV: and possible the contrast between /known/ unknowns and /unknown/ unknowns.)
**** *Alternatives*

- JC: This doesn‚Äôt look or feel that it has to be mediated via a DPL, which is a good thing b/c it makes it generically applicable to any group of people doing anything (which, ironically, makes it more of a pattern...).
- JC: We had talked some weeks ago about the 15 commitments of conscious leadership, one of which had particularly marked me: /candour/, which could be a helpful contributor to most of NA‚Äôs patterns.
- LV: This reminds me of our discussion of how to come up with patterns.

*** AT
**** *Timescales of the human body*
  - The human body and blood pressure, related to, e.g.,
  - Endocrine system, immune system, at a different timescale
  - Constantly furnishing ability
  - Relates to interoception (there‚Äôs something in my body that‚Äôs not right)
     - The city takes this "up" a level, the city should also sense what‚Äôs going on with the individual, progressing from individual to social
- Reflection over the last week on how patterns fit in; following a meeting w/ /landscape architects/ I was trying to engage them by talking about patterns and asking what‚Äôs useful for practice.  Synthesizing information from lots of different domains that would support their ability to put a case together to support the kinds of designs that they‚Äôre trying to develop.  E.g. sustainability of materials, pollution outcomes, health outcomes; lots of different impacts is sought from different sources.  Through the use of patterns would be ‚Äúa synthesis of this information‚Äù.  How to go and look at how all these different things are working in their use case / environment. So:
**** *Integrating real-time data from lots of different sources and supporting design decisions on the ground.*
  - How do we draw together different pieces of information, in a way that‚Äôs useful for the people doing the meetings.

LV: Plenty of parallels: w/ software, patterns came late to the party.  They had a period where they were used all the times in the early 2000‚Äôs, everyone was loving it.  It was the hey-day of object-oriented programming, and how much easier it made things.  There was an idea of /practicality/; we tend to oppose it to /‚Äòabstraction‚Äô/ (which can seem more theoretical).  But the discussion about patterns takes something that‚Äôs abstract in nature and makes it practical.  How do the different domains we‚Äôre interested in bring back practicality?
- The trickle-down from working with patterns is improved ability to do your job.
- Nowadays patterns have somewhat come under fire in programming b/c early adopters have somewhat come back from them: patterns can be useful but a lot of people go way too abstract.  In OOP, you represent pieces of programs as separate machines talking with each other.  Once the machine has been created you don‚Äôt have to go into the program anymore, you have the /interface/ (as an abstraction).  But in software engineering it started to be seen as too abstract: e.g., too many machines, just to abide by the interface-abstraction idea.
- But some folks are thinking: what are the practical aspects of this, channeling the same spirit, but going back to practicality at the end: from CPS to the abstract, then back to the practicality...

JC: A pattern should be something that allows us to make sense of the context.  How do we square that weird feature?  As we think about a context more and more, revising our vision of the context in the process, but also sharing it with other people, there‚Äôs a moving consensus on what the context is.

- First practice-based discussion in one discipline

*** Integration
**** How do we determine what the overlaps are?
How do we determine what the themes are, so that we have a shared language?  E.g., when Leo was talking about
machines, is there a machine that will map Python to JSON (e.g.). ‚Äî in general, landscape architects, where do they
start to look at other domains.  How can other folks talk about things in a way that the landscape architects
understand?

**** "A pattern should be something that allows us to make sense of the context."
- Context becomes central in this way.  Its similar to talk about patterns in programming: they allowed you to raise above the level of the language.  What we‚Äôre trying to do w/ PLACARD is rise above the different individual fields (architecture, development, etc.)
- Like in Esperanto, you‚Äôre inviting expansion of the common ground via sharing.
- Functions are the bread and butter of programming. But writing a machine is different; it will be considered as an abstract thing.  With functions you‚Äôre more glued to what goes in and out.  The machine is language agnostic.  E.g. "factory" can show up in any language.  It‚Äôs an abstract building block that only depends on the creation of an abstract entity with its own context.

* BREAK
:PROPERTIES:
:Effort:   0:05
:END:

No break; we‚Äôre sprinting to the finish line! ‰∏â‰∏â·ïï( ·êõ )·ïó

* Agenda (Part 2) - Next steps
:PROPERTIES:
:Effort:   0:20
:END:

** Paris
:PROPERTIES:
:Effort:   0:10
:END:

- Rework timeline from [[https://docs.google.com/document/d/1M445JRVS5P4V_ddD8TvVM8rWUPcyRzGLneDC2rEDvVo/edit][Going meta]]
- Abstraction becoming practical
- How do we make this accessible?  The way we talk about patterns is rather specialised.  How can any discipline come out of their own discipline and start talking about this stuff?  Creating a bridge for the disciplines.

Let‚Äôs say, each domain has their own set of patterns and they describe it in a certain way.  E.g.,
- Domain A have 15 patterns described in some language,
- Domain B have 15 patterns described in some other language,

How do we know which ones are the closest to each other?
Then select those, and smoosh them together when we can say that they are the same thing.

We would have facilitated in this role, reflecting them back, to get them to decide that there‚Äôs common ground.

E.g., meetings in parallel between
- landscape ‚Äî
- materials ‚Äî
- public health ‚Äî
Then take these descriptions from each of these experts, then run some text model to measure similarities & distances between their individual output-packets.

E.g., whatever the similarity between landscape and health experts there seem to be 3 or 4 patterns that are similar.  Maybe landscape and materials folks only have 2 patterns that are similar, then bring them all together... then we‚Äôd have a nice understanding of what the problem is.

This contrasts with the opposite approach which would be to form multidisciplinary teams, have interdiscplinary teams, so that they can discuss the problems/patterns...

JC: Reminder of Guattari essay.

If we do it separately w/ experts that allows rather rapid progress compared with doing it all together

JC: This is like the Tinder of patterns

LV: A nice way to bring it together in light of the patterns that we‚Äôve mentioned before is to bring a sense of direction, e.g., practical ‚Üí abstract ‚Üí practical.

So e.g. is it useful to have experts work together or mix them up?  Which is crucial to PLACARD?  People in their own fields are already talking with people in their own fields (JC: or somehow known-to-be adjacent ones).  Mingling with people with similar speciality allows you to get better.  We only start talking about patterns when we start thinking outside of disciplines or into a transdisciplinary level.  A craft-oriented discipline (e.g., with many bridges that look like one another, on another landscape) will be used to talking about abstract patterns... the contrast w/ having both distributed/transdisciplinary/silo‚Äôed...

- You use a concept associated with a label, e.g., "OOP" is clear to software engineers.  But if you have a group of specialists, say engineers, and they try to think in terms of labels that are beyond their field.  Rising above their mere speciality: yes we‚Äôre engineers who build complex stuff, but what‚Äôs mobilised from a human/social perspective?  What‚Äôs the element related to mastery in your field?  How do you quantify it, appreciate it in others?  Using a group of experts to derive elements of brilliance from a field.


* PAR
:PROPERTIES:
:Effort:   0:10
:END:


*** 1. Establish what is happening: what and how are we learning?

We all met on Emacs stuff and FLOSS stuff, and we had a grid of software *collaboration* online.  Software engineers, we use the term ‚Äúengineer‚Äù as a term of experience even though we don‚Äôt do a lot of actual engineering. But in fact it‚Äôs available to anyone, you don‚Äôt need a fancy degree or ages studied mathematics & physics.  You might get people building the equivalent of bridges that collapse...  But you don‚Äôt expect bridge-builders to share their designs.  I think this is our heritage from the shared field we come from.  We had an interest in software.

JC: AT & JC have been thinking about software a lot too.

AT: It does seem to form the basis of what we‚Äôre doing, we talked with AK about this yesterday, and talking and thinking about the limitations of the architecture there.  Making something relatively abstract take shape with practicality seems nicely embedded in natural sciences but it was born out of problem solving at a computational level.  There‚Äôs a dance between abstract-communication-enhancing stuff (which can also bridge disciplines) and making it practical (within disciplines [JC: within transdisciplinary teams?]).

*** 2. What are some different perspectives on what's happening?

- Design is the "remedy against complexity"; or perhaps a ‚Äú/dance/ with complexity?‚Äù
- Simplify as much as possible (in software); have a stance where you hide in a machine whatever should go in the machine, and create a simple interface (e.g., just press a button to turn on the computer)
- Conversations w/ AK almost mimics this: the situation is computationally complex trying to account for every single policy in a moderately-sized matrix.  AK is working with someone to try to solve this.  Behind the solution is a refinement of policies, creating a condensation of complexity.
- This is what Noorah was telling us to do with people in transdisciplinary groups

*** 3. What did we learn or change?

- Abstract to practical...

*** 4. What else should we change going forward?

- We like the computational approach, looking at what to do with patterns that are close
- It‚Äôs more machinistic

* Tentative agenda for next week

- Let‚Äôs decide scheduling details on Tuesday
- Otherwise as normal

* Check-out
:PROPERTIES:
:Effort:   0:05
:END:

** NA
- Just gonna go some errands and have lunch.

** JC
- It‚Äôs funny that the check-in/-out are just highlighting how embedded those ERG sessions are in our day.
- Gonna have his family call when on the garden, probably with a new layer of sunscreen.
- Going to a caleigh after

** LV
- Splashing water on my neck to try and stay cool has only been partly effective; this meeting has created some heat, because the body gets involved; next thing is series for the rest of the day

** AT
- Eurovision is in Turin, making pasta from scratch, having a few people over
