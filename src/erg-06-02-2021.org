#+TITLE: 06 February 2021 — Emacs Research Group
#+Author: Noorah Alhasan, Joe Corneli, David O’Toole, Raymond Puzio, Cameron Ray Smith, Leo Vivier with special guest Qiantan Hong
#+roam_tag: HI
#+FIRN_UNDER: erg
#+FIRN_LAYOUT: update
#+DATE_CREATED: <2021-06-02 Saturday>

In this meeting we did a live demo and source code 
exploration of [[https://code.librehq.com/qhong/crdt.el][crdt.el]] with the author, Qiantan Hong.
In the last 15 minutes we outlined some plans for the next meeting, to
focus on Patterns + Org mode.

* Multiple buffers

- Different levels of correctness

** Buffers are synchronised naïvely
* The algorithm
** User synchronisation algorithm
*** ‘Each writer wants to see their change instantly.’
*** Authority → Inter-related with others’s
**** Problem: It will wait for a round-trip.
** Original transform: Broadcasting one’s operations naïvely
*** Synchronising text-first
*** Fundamental prble
*** Person A: Type ‘a’ at position 100; the character appears
*** Person B: Type ‘b’ at position 90; there’s going to be an offset for Person A.
** Operation transform
*** Relating the different operations between the different
*** Working with proprieties
*** Working with IDs to every change, and requiring those IDs (unambiguous labels?)
*** The IDs need to be strictly incremental
**** Q: Linearity of the changes?
*** Because you’re never using the absolute position (hence, everything is relative)
*** ‘Every character, every operation, after it has been created, is a persistent data, associated with a unique label (i.e. the time at which it was created)’
** On the question of conflicts
*** Ray: Are there possible conflicts when two users decide to act on the same portion of a buffer?
**** Example
***** ‘AB’
***** ‘ABC’ vs. ‘ABD’
*** L: Is the time-keeping done by the server or the client (to avoid clashes)?
**** J: The resolution is not done merely on time, but on the identification of users.
**** ‘The server does not play a significant rôle in that operation, other than broadcasting messages’
***** ‘The ID is generated by the client; the server is just the broadcaster.’
***** ‘There’s no strict notion of “earlier”.’
**** Using random IDs would lead to problem with interleaving the changes
**** ‘Instead of generating an ID for every change, crdt is generating an idea for a /segment/ of text’
***** The result of the previous example would be ‘ABCD’ or ‘ABDC’.
**** The chunking is handled by related IDs, i.e., in ‘CAT’, ‘A’ would be related to ‘C’, etc.
** Implementation questions
*** Text-properties
**** All the
* Paths of improvement?
** Colour-coded modifications
*** Maybe a bg face?
** Adding extra hooks
*** ~crdt--user-menu-goto~
** Making click in ~crdt-user-menu-mode~ an alias for <Enter>           :easy:
*** Easy PR
** Max number of users
*** Currently 2 to 16 concurrent users
*** Noorah recommends keeping it under 10 for situations
** Getting inspiration from etherpad wrt algorithm, number of concurrent users, etc.
** [#B] Stopping the session is not necessarily reliable
*** There are some required checks to prevent data-lossage
*** ‘You have to use ~crdt-stop-session~ vs. ~crdt-disconnect~.’
** Using ~warn~ to show disconnection warning                           :easy:
*** Otherwise, it’s too subtle to be noticed
*** ‘Using messages are hard to notice, but it is my personal opinion that is easy to notice’
*** ~Synchronization error detected, try recovering...~
** Problem when switching major-mode: crdt is reset                   :easy:
*** Using a local-var is not possible because the env is dropped when reloading the major-mode
*** Using a global-var
* Other comments
** Qiantan writes very interesting comment in their packages.
** Nice point on Haskell vs. Elisp when designing programs/algorithms, especially taking into account
** David might be interested in getting in touch with Qiantan based on his work on music
** Our org-mode buffer was doomed, but we managed to fix
** Qiantan doesn’t really take notes
* Questions on the future of crdt.el
** Do you plan on merging this into Emacs’s core?
*** Response
QH: I don’t make plans :-)
There are boring issues with copyright assignment, but MIT .
But I am graduating this summer
*** /CLA/ ? might be a problem because of MIT. (Copyright Licence Agreement, historically made against MIT)
*** MELPA?
** Can we help to work on UX & development?
We’d be quite excited to keep working on this as a population of testers
and as potential helpers with the code.
LV has no experience with this algorithm...
LV Would be excited to work with the UX of the program.
*** What would be necessary to facilitate the development of crdt.el?
**** UX might be an easy thing to address
**** Iterating on the code
***** Qiantan is happy to explain some of the code to us.
**** Documentation
**** Organising a hackathon for improving crdt.el?
***** Qiantan works very efficiently when they’re alone; however, they’d be happy to help.
* PAR (Project Action Report/Review)
** 1. Review the intention: what do we expect to learn or make together?
- Qiantan as special guest to describe and demo crdt
- Q&A about CRDT
- This is a perfect example of the kind of thing we wanted to do
** 2. Establish what is happening: what and how are we learning?
- Very successful demo
- Fun time getting to know Qiantan
** 3. What are some different perspectives on what’s happening?
- Worked well from Qiantan’s side
- Qiantan doesn’t use org mode... it generates section
- We are very excited about crdt
- Joe took less notes this time
** 4. What did we learn or change?
- We found a few bugs and possible features
- We understand the CRDT algorithm and also features of the code (like clicking on users to follow them)
** 5. What else should we change going forward?
- Leo to liaise UX, dev stuff
- Nice to have further sessions where we go in depth about code
- Ideal to have specific questions
- Email bugs and features
- Follow up with a demo of the music stuff sometime
- Follow up with a public session to promote this at some stage
- Prepare for CRDT Hackathon in summer?
* Next time
** Meeting with Charlie next week [2021-02-13 Sat 18:30-20:30]
*** Exploration of Joe’s org-roam-based-workflow
**** org-roam might be optional for them, since most of them are not by any stretch of the imagination expert Emacs users
***** Could we have the same level of success with a novice, as we did with Qiantan (an expert) today?
****** Could be a nice reflection on our bridging the gap
****** It would also allow us to /harvest/ the design serendipity of other people
**** Functional demo, something à la David with Noorah?
*** Working on patterns
**** Esp. on the virtuous circle of working/PAR/working/PAR/…
**** In the context of Emacs & research
***** We’d be covering new ground: Source for a paper
* Agenda for next time
** Interview on patterns, as a ERG/Peeragogy joint venture
*** COMMENT org (25%)
**** Just present the way we take notes; no need to go into the deep stuff
**** Noorah might be able to present a shortened version of her org setup.
*** COMMENT patterns (75%)
*** Patterns
** Other stuff (45 min)
*** AI & Data analysis
**** Exchange between digital humanities and AI
* Points for later
** Collaborative slip-box
